

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Wed Dec 06 06:25:04 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 17/08/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000E                     	;# 
    58     000E                     	;# 
    59     000F                     	;# 
    60     0010                     	;# 
    61     0011                     	;# 
    62     0012                     	;# 
    63     0015                     	;# 
    64     0015                     	;# 
    65     0016                     	;# 
    66     0017                     	;# 
    67     0018                     	;# 
    68     0019                     	;# 
    69     001A                     	;# 
    70     001F                     	;# 
    71     0081                     	;# 
    72     0085                     	;# 
    73     0086                     	;# 
    74     008C                     	;# 
    75     008E                     	;# 
    76     0092                     	;# 
    77     0098                     	;# 
    78     0099                     	;# 
    79     009A                     	;# 
    80     009B                     	;# 
    81     009C                     	;# 
    82     009D                     	;# 
    83     009F                     	;# 
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     008C                     	;# 
   112     008E                     	;# 
   113     0092                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009F                     	;# 
   121     000E                     _TMR1	set	14
   122     0006                     _PORTB	set	6
   123     0010                     _T1CONbits	set	16
   124     000B                     _INTCONbits	set	11
   125     0030                     _RB0	set	48
   126     0060                     _TMR1IF	set	96
   127     0086                     _TRISB	set	134
   128     008C                     _PIE1bits	set	140
   129     008E                     _PCONbits	set	142
   130                           
   131                           	psect	cinit
   132     000B                     start_initialization:	
   133                           ; #config settings
   134                           
   135     000B                     __initialization:
   136                           
   137                           ; Clear objects allocated to COMMON
   138     000B  01F0               	clrf	__pbssCOMMON& (0+127)
   139     000C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   140     000D  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   141     000E  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   142     000F  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   143     0010  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   144     0011  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   145     0012  01F7               	clrf	(__pbssCOMMON+7)& (0+127)
   146     0013                     end_of_initialization:	
   147                           ;End of C runtime variable initialization code
   148                           
   149     0013                     __end_of__initialization:
   150     0013  0183               	clrf	3
   151     0014  2815               	ljmp	_main	;jump to C main() function
   152                           
   153                           	psect	bssCOMMON
   154     0070                     __pbssCOMMON:
   155     0070                     _saat:
   156     0070                     	ds	2
   157     0072                     _dakika:
   158     0072                     	ds	2
   159     0074                     _saniye:
   160     0074                     	ds	2
   161     0076                     _sayac:
   162     0076                     	ds	2
   163                           
   164                           	psect	cstackCOMMON
   165     0078                     __pcstackCOMMON:
   166     0078                     ?_timer1:
   167     0078                     ??_timer1:	
   168                           ; 1 bytes @ 0x0
   169                           
   170     0078                     ?_main:	
   171                           ; 1 bytes @ 0x0
   172                           
   173                           
   174                           ; 2 bytes @ 0x0
   175     0078                     	ds	2
   176     007A                     ??_main:
   177                           
   178                           	psect	maintext
   179     0015                     __pmaintext:	
   180                           ; 1 bytes @ 0x2
   181 ;;
   182 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   183 ;;
   184 ;; *************** function _main *****************
   185 ;; Defined at:
   186 ;;		line 33 in file "CALAR_SAAT.c"
   187 ;; Parameters:    Size  Location     Type
   188 ;;		None
   189 ;; Auto vars:     Size  Location     Type
   190 ;;		None
   191 ;; Return value:  Size  Location     Type
   192 ;;                  2   37[None  ] int 
   193 ;; Registers used:
   194 ;;		wreg, status,2, btemp+1
   195 ;; Tracked objects:
   196 ;;		On entry : B00/0
   197 ;;		On exit  : 0/0
   198 ;;		Unchanged: 0/0
   199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   200 ;;      Params:         0       0       0       0
   201 ;;      Locals:         0       0       0       0
   202 ;;      Temps:          0       0       0       0
   203 ;;      Totals:         0       0       0       0
   204 ;;Total ram usage:        0 bytes
   205 ;; Hardware stack levels required when called: 1
   206 ;; This function calls:
   207 ;;		Nothing
   208 ;; This function is called by:
   209 ;;		Startup code after reset
   210 ;; This function uses a non-reentrant model
   211 ;;
   212                           
   213     0015                     _main:	
   214                           ;psect for function _main
   215                           
   216     0015                     l602:	
   217                           ;incstack = 0
   218                           ; Regs used in _main: [wreg+status,2+btemp+1]
   219                           
   220                           
   221                           ;CALAR_SAAT.c: 34:     PCONbits.OSCF=1;
   222     0015  1683               	bsf	3,5	;RP0=1, select bank1
   223     0016  1303               	bcf	3,6	;RP1=0, select bank1
   224     0017  158E               	bsf	14,3	;volatile
   225                           
   226                           ;CALAR_SAAT.c: 35:     INTCONbits.GIE=1;
   227     0018  178B               	bsf	11,7	;volatile
   228                           
   229                           ;CALAR_SAAT.c: 36:     INTCONbits.PEIE=1;
   230     0019  170B               	bsf	11,6	;volatile
   231                           
   232                           ;CALAR_SAAT.c: 37:     PIE1bits.TMR1IE=1;
   233     001A  140C               	bsf	12,0	;volatile
   234                           
   235                           ;CALAR_SAAT.c: 38:     T1CONbits.T1CKPS0=0;
   236     001B  1283               	bcf	3,5	;RP0=0, select bank0
   237     001C  1303               	bcf	3,6	;RP1=0, select bank0
   238     001D  1210               	bcf	16,4	;volatile
   239                           
   240                           ;CALAR_SAAT.c: 39:     T1CONbits.T1CKPS1=0;
   241     001E  1290               	bcf	16,5	;volatile
   242                           
   243                           ;CALAR_SAAT.c: 40:     T1CONbits.TMR1CS=0;
   244     001F  1090               	bcf	16,1	;volatile
   245                           
   246                           ;CALAR_SAAT.c: 41:     T1CONbits.TMR1ON=1;
   247     0020  1410               	bsf	16,0	;volatile
   248     0021                     l604:
   249                           
   250                           ;CALAR_SAAT.c: 43:     TRISB=0x00;
   251     0021  1683               	bsf	3,5	;RP0=1, select bank1
   252     0022  1303               	bcf	3,6	;RP1=0, select bank1
   253     0023  0186               	clrf	6	;volatile
   254                           
   255                           ;CALAR_SAAT.c: 44:     PORTB=0;
   256     0024  1283               	bcf	3,5	;RP0=0, select bank0
   257     0025  1303               	bcf	3,6	;RP1=0, select bank0
   258     0026  0186               	clrf	6	;volatile
   259     0027                     l606:
   260                           
   261                           ;CALAR_SAAT.c: 47:         if(saniye>=60){
   262     0027  0875               	movf	_saniye+1,w
   263     0028  3A80               	xorlw	128
   264     0029  00FF               	movwf	btemp+1
   265     002A  3080               	movlw	128
   266     002B  027F               	subwf	btemp+1,w
   267     002C  1D03               	skipz
   268     002D  2830               	goto	u35
   269     002E  303C               	movlw	60
   270     002F  0274               	subwf	_saniye,w
   271     0030                     u35:
   272     0030  1C03               	skipc
   273     0031  2833               	goto	u31
   274     0032  2834               	goto	u30
   275     0033                     u31:
   276     0033  2827               	goto	l606
   277     0034                     u30:
   278     0034                     l608:
   279                           
   280                           ;CALAR_SAAT.c: 48:             saniye=0;
   281     0034  01F4               	clrf	_saniye
   282     0035  01F5               	clrf	_saniye+1
   283     0036                     l610:
   284                           
   285                           ;CALAR_SAAT.c: 49:             dakika++;
   286     0036  3001               	movlw	1
   287     0037  07F2               	addwf	_dakika,f
   288     0038  1803               	skipnc
   289     0039  0AF3               	incf	_dakika+1,f
   290     003A  3000               	movlw	0
   291     003B  07F3               	addwf	_dakika+1,f
   292     003C                     l612:
   293                           
   294                           ;CALAR_SAAT.c: 50:             if(dakika>=60){
   295     003C  0873               	movf	_dakika+1,w
   296     003D  3A80               	xorlw	128
   297     003E  00FF               	movwf	btemp+1
   298     003F  3080               	movlw	128
   299     0040  027F               	subwf	btemp+1,w
   300     0041  1D03               	skipz
   301     0042  2845               	goto	u45
   302     0043  303C               	movlw	60
   303     0044  0272               	subwf	_dakika,w
   304     0045                     u45:
   305     0045  1C03               	skipc
   306     0046  2848               	goto	u41
   307     0047  2849               	goto	u40
   308     0048                     u41:
   309     0048  2827               	goto	l606
   310     0049                     u40:
   311     0049                     l614:
   312                           
   313                           ;CALAR_SAAT.c: 51:                 dakika=0;
   314     0049  01F2               	clrf	_dakika
   315     004A  01F3               	clrf	_dakika+1
   316     004B                     l616:
   317                           
   318                           ;CALAR_SAAT.c: 52:                 saat++;
   319     004B  3001               	movlw	1
   320     004C  07F0               	addwf	_saat,f
   321     004D  1803               	skipnc
   322     004E  0AF1               	incf	_saat+1,f
   323     004F  3000               	movlw	0
   324     0050  07F1               	addwf	_saat+1,f
   325     0051                     l618:
   326                           
   327                           ;CALAR_SAAT.c: 53:                 if(saat>=24){
   328     0051  0871               	movf	_saat+1,w
   329     0052  3A80               	xorlw	128
   330     0053  00FF               	movwf	btemp+1
   331     0054  3080               	movlw	128
   332     0055  027F               	subwf	btemp+1,w
   333     0056  1D03               	skipz
   334     0057  285A               	goto	u55
   335     0058  3018               	movlw	24
   336     0059  0270               	subwf	_saat,w
   337     005A                     u55:
   338     005A  1C03               	skipc
   339     005B  285D               	goto	u51
   340     005C  285E               	goto	u50
   341     005D                     u51:
   342     005D  2861               	goto	l39
   343     005E                     u50:
   344     005E                     l620:
   345                           
   346                           ;CALAR_SAAT.c: 54:                     saat=0;
   347     005E  01F0               	clrf	_saat
   348     005F  01F1               	clrf	_saat+1
   349     0060  2827               	goto	l606
   350     0061                     l39:	
   351                           ;CALAR_SAAT.c: 57:         }
   352                           
   353     0061  2827               	goto	l606
   354     0062  280A               	ljmp	start
   355     0063                     __end_of_main:
   356                           
   357                           	psect	text1
   358     0063                     __ptext1:	
   359 ;; *************** function _timer1 *****************
   360 ;; Defined at:
   361 ;;		line 20 in file "CALAR_SAAT.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;		None
   364 ;; Auto vars:     Size  Location     Type
   365 ;;		None
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   375 ;;      Params:         0       0       0       0
   376 ;;      Locals:         0       0       0       0
   377 ;;      Temps:          2       0       0       0
   378 ;;      Totals:         2       0       0       0
   379 ;;Total ram usage:        2 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		Interrupt level 1
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388     0063                     _timer1:	
   389                           ;psect for function _timer1
   390                           
   391     0063                     i1l588:
   392                           
   393                           ;CALAR_SAAT.c: 21:     if(TMR1IF){
   394     0063  1283               	bcf	3,5	;RP0=0, select bank0
   395     0064  1303               	bcf	3,6	;RP1=0, select bank0
   396     0065  1C0C               	btfss	12,0	;volatile
   397     0066  2868               	goto	u1_21
   398     0067  2869               	goto	u1_20
   399     0068                     u1_21:
   400     0068  2885               	goto	i1l33
   401     0069                     u1_20:
   402     0069                     i1l590:
   403                           
   404                           ;CALAR_SAAT.c: 22:         TMR1=15536;
   405     0069  303C               	movlw	60
   406     006A  008F               	movwf	15	;volatile
   407     006B  30B0               	movlw	176
   408     006C  008E               	movwf	14	;volatile
   409                           
   410                           ;CALAR_SAAT.c: 23:         TMR1IF=0;
   411     006D  100C               	bcf	12,0	;volatile
   412     006E                     i1l592:
   413                           
   414                           ;CALAR_SAAT.c: 24:         sayac++;
   415     006E  3001               	movlw	1
   416     006F  07F6               	addwf	_sayac,f
   417     0070  1803               	skipnc
   418     0071  0AF7               	incf	_sayac+1,f
   419     0072  3000               	movlw	0
   420     0073  07F7               	addwf	_sayac+1,f
   421     0074                     i1l594:
   422                           
   423                           ;CALAR_SAAT.c: 25:         if(sayac==20){
   424     0074  3014               	movlw	20
   425     0075  0676               	xorwf	_sayac,w
   426     0076  0477               	iorwf	_sayac+1,w
   427     0077  1D03               	btfss	3,2
   428     0078  287A               	goto	u2_21
   429     0079  287B               	goto	u2_20
   430     007A                     u2_21:
   431     007A  2885               	goto	i1l33
   432     007B                     u2_20:
   433     007B                     i1l596:
   434                           
   435                           ;CALAR_SAAT.c: 26:             sayac=0;
   436     007B  01F6               	clrf	_sayac
   437     007C  01F7               	clrf	_sayac+1
   438     007D                     i1l598:
   439                           
   440                           ;CALAR_SAAT.c: 27:             saniye++;
   441     007D  3001               	movlw	1
   442     007E  07F4               	addwf	_saniye,f
   443     007F  1803               	skipnc
   444     0080  0AF5               	incf	_saniye+1,f
   445     0081  3000               	movlw	0
   446     0082  07F5               	addwf	_saniye+1,f
   447     0083                     i1l600:
   448                           
   449                           ;CALAR_SAAT.c: 28:             RB0=RB0^1;
   450     0083  3001               	movlw	1
   451     0084  0686               	xorwf	6,f
   452     0085                     i1l33:
   453     0085  0879               	movf	??_timer1+1,w
   454     0086  008A               	movwf	10
   455     0087  0E78               	swapf	??_timer1,w
   456     0088  0083               	movwf	3
   457     0089  0EFE               	swapf	btemp,f
   458     008A  0E7E               	swapf	btemp,w
   459     008B  0009               	retfie
   460     008C                     __end_of_timer1:
   461     007E                     btemp	set	126	;btemp
   462     007E                     wtemp0	set	126
   463                           
   464                           	psect	intentry
   465     0004                     __pintentry:	
   466                           ;incstack = 0
   467                           ; Regs used in _timer1: [wreg+status,2+status,0]
   468                           
   469     0004                     interrupt_function:
   470     007E                     saved_w	set	btemp
   471     0004  00FE               	movwf	btemp
   472     0005  0E03               	swapf	3,w
   473     0006  00F8               	movwf	??_timer1
   474     0007  080A               	movf	10,w
   475     0008  00F9               	movwf	??_timer1+1
   476     0009  2863               	ljmp	_timer1
   477                           
   478                           	psect	config
   479                           
   480                           ;Config register CONFIG @ 0x2007
   481                           ;	Oscillator Selection bits
   482                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   483                           ;	Watchdog Timer Enable bit
   484                           ;	WDTE = OFF, WDT disabled
   485                           ;	Power-up Timer Enable bit
   486                           ;	PWRTE = OFF, PWRT disabled
   487                           ;	RA5/MCLR/VPP Pin Function Select bit
   488                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   489                           ;	Brown-out Detect Enable bit
   490                           ;	BOREN = OFF, BOD disabled
   491                           ;	Low-Voltage Programming Enable bit
   492                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   493                           ;	Data EE Memory Code Protection bit
   494                           ;	CPD = OFF, Data memory code protection off
   495                           ;	Flash Program Memory Code Protection bit
   496                           ;	CP = OFF, Code protection off
   497     2007                     	org	8199
   498     2007  3F38               	dw	16184

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         8
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer1 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer1                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       A      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Wed Dec 06 06:25:04 2023

                     l39 0061                       u30 0034                       u31 0033  
                     u40 0049                       u41 0048                       u50 005E  
                     u51 005D                       u35 0030                       u45 0045  
                     u55 005A                      l610 0036                      l602 0015  
                    l620 005E                      l612 003C                      l604 0021  
                    l614 0049                      l606 0027                      l616 004B  
                    l608 0034                      l618 0051                      _RB0 0030  
                   i1l33 0085                     _TMR1 000E                     u1_20 0069  
                   u1_21 0068                     u2_20 007B                     u2_21 007A  
                   _main 0015                     _saat 0070                     btemp 007E  
                   start 000A                    ?_main 0078                    i1l600 0083  
                  i1l590 0069                    i1l592 006E                    i1l594 0074  
                  i1l596 007B                    i1l588 0063                    i1l598 007D  
                  _PORTB 0006                    _TRISB 0086                    _sayac 0076  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000B             __end_of_main 0063                   ??_main 007A  
                 _TMR1IF 0060                   _dakika 0072                   _saniye 0074  
                 _timer1 0063                   saved_w 007E  __end_of__initialization 0013  
         __pcstackCOMMON 0078               __pmaintext 0015               __pintentry 0004  
                ?_timer1 0078                  __ptext1 0063                _T1CONbits 0010  
   end_of_initialization 0013           __end_of_timer1 008C      start_initialization 000B  
               ??_timer1 0078              __pbssCOMMON 0070                ___latbits 0000  
      interrupt_function 0004                 _PIE1bits 008C                 _PCONbits 008E  
             _INTCONbits 000B                 intlevel1 0000  
