

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Fri Dec 15 19:53:46 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20     0000                     
    21                           ; Generated 17/08/2023 GMT
    22                           ; 
    23                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F628A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55     0000                     	;# 
    56     0001                     	;# 
    57     0002                     	;# 
    58     0003                     	;# 
    59     0004                     	;# 
    60     0005                     	;# 
    61     0006                     	;# 
    62     000A                     	;# 
    63     000B                     	;# 
    64     000C                     	;# 
    65     000E                     	;# 
    66     000E                     	;# 
    67     000F                     	;# 
    68     0010                     	;# 
    69     0011                     	;# 
    70     0012                     	;# 
    71     0015                     	;# 
    72     0015                     	;# 
    73     0016                     	;# 
    74     0017                     	;# 
    75     0018                     	;# 
    76     0019                     	;# 
    77     001A                     	;# 
    78     001F                     	;# 
    79     0081                     	;# 
    80     0085                     	;# 
    81     0086                     	;# 
    82     008C                     	;# 
    83     008E                     	;# 
    84     0092                     	;# 
    85     0098                     	;# 
    86     0099                     	;# 
    87     009A                     	;# 
    88     009B                     	;# 
    89     009C                     	;# 
    90     009D                     	;# 
    91     009F                     	;# 
    92     0000                     	;# 
    93     0001                     	;# 
    94     0002                     	;# 
    95     0003                     	;# 
    96     0004                     	;# 
    97     0005                     	;# 
    98     0006                     	;# 
    99     000A                     	;# 
   100     000B                     	;# 
   101     000C                     	;# 
   102     000E                     	;# 
   103     000E                     	;# 
   104     000F                     	;# 
   105     0010                     	;# 
   106     0011                     	;# 
   107     0012                     	;# 
   108     0015                     	;# 
   109     0015                     	;# 
   110     0016                     	;# 
   111     0017                     	;# 
   112     0018                     	;# 
   113     0019                     	;# 
   114     001A                     	;# 
   115     001F                     	;# 
   116     0081                     	;# 
   117     0085                     	;# 
   118     0086                     	;# 
   119     008C                     	;# 
   120     008E                     	;# 
   121     0092                     	;# 
   122     0098                     	;# 
   123     0099                     	;# 
   124     009A                     	;# 
   125     009B                     	;# 
   126     009C                     	;# 
   127     009D                     	;# 
   128     009F                     	;# 
   129                           
   130                           	psect	idataBANK0
   131     01F3                     __pidataBANK0:
   132                           
   133                           ;initializer for _sayilar
   134     01F3  343F               	retlw	63
   135     01F4  3400               	retlw	0
   136     01F5  3406               	retlw	6
   137     01F6  3400               	retlw	0
   138     01F7  345B               	retlw	91
   139     01F8  3400               	retlw	0
   140     01F9  344F               	retlw	79
   141     01FA  3400               	retlw	0
   142     01FB  3466               	retlw	102
   143     01FC  3400               	retlw	0
   144     01FD  346D               	retlw	109
   145     01FE  3400               	retlw	0
   146     01FF  347D               	retlw	125
   147     0200  3400               	retlw	0
   148     0201  3407               	retlw	7
   149     0202  3400               	retlw	0
   150     0203  347F               	retlw	127
   151     0204  3400               	retlw	0
   152     0205  346F               	retlw	111
   153     0206  3400               	retlw	0
   154                           
   155                           	psect	nvBANK0
   156     0044                     __pnvBANK0:
   157     0044                     _degisken:
   158     0044                     	ds	2
   159     000E                     _TMR1	set	14
   160     0010                     _T1CONbits	set	16
   161     000B                     _INTCONbits	set	11
   162     0006                     _PORTB	set	6
   163     0005                     _PORTA	set	5
   164     0029                     _RA1	set	41
   165     002A                     _RA2	set	42
   166     0060                     _TMR1IF	set	96
   167     0086                     _TRISB	set	134
   168     008C                     _PIE1bits	set	140
   169     008E                     _PCONbits	set	142
   170     0085                     _TRISA	set	133
   171                           
   172                           	psect	cinit
   173     000F                     start_initialization:	
   174                           ; #config settings
   175                           
   176     000F                     __initialization:
   177                           
   178                           ; Initialize objects allocated to BANK0
   179     000F  21F3               	fcall	__pidataBANK0	;fetch initializer
   180     0010  00A0               	movwf	__pdataBANK0& (0+127)
   181     0011  21F4               	fcall	__pidataBANK0+1	;fetch initializer
   182     0012  00A1               	movwf	(__pdataBANK0+1)& (0+127)
   183     0013  21F5               	fcall	__pidataBANK0+2	;fetch initializer
   184     0014  00A2               	movwf	(__pdataBANK0+2)& (0+127)
   185     0015  21F6               	fcall	__pidataBANK0+3	;fetch initializer
   186     0016  00A3               	movwf	(__pdataBANK0+3)& (0+127)
   187     0017  21F7               	fcall	__pidataBANK0+4	;fetch initializer
   188     0018  00A4               	movwf	(__pdataBANK0+4)& (0+127)
   189     0019  21F8               	fcall	__pidataBANK0+5	;fetch initializer
   190     001A  00A5               	movwf	(__pdataBANK0+5)& (0+127)
   191     001B  21F9               	fcall	__pidataBANK0+6	;fetch initializer
   192     001C  00A6               	movwf	(__pdataBANK0+6)& (0+127)
   193     001D  21FA               	fcall	__pidataBANK0+7	;fetch initializer
   194     001E  00A7               	movwf	(__pdataBANK0+7)& (0+127)
   195     001F  21FB               	fcall	__pidataBANK0+8	;fetch initializer
   196     0020  00A8               	movwf	(__pdataBANK0+8)& (0+127)
   197     0021  21FC               	fcall	__pidataBANK0+9	;fetch initializer
   198     0022  00A9               	movwf	(__pdataBANK0+9)& (0+127)
   199     0023  21FD               	fcall	__pidataBANK0+10	;fetch initializer
   200     0024  00AA               	movwf	(__pdataBANK0+10)& (0+127)
   201     0025  21FE               	fcall	__pidataBANK0+11	;fetch initializer
   202     0026  00AB               	movwf	(__pdataBANK0+11)& (0+127)
   203     0027  21FF               	fcall	__pidataBANK0+12	;fetch initializer
   204     0028  00AC               	movwf	(__pdataBANK0+12)& (0+127)
   205     0029  2200               	fcall	__pidataBANK0+13	;fetch initializer
   206     002A  00AD               	movwf	(__pdataBANK0+13)& (0+127)
   207     002B  2201               	fcall	__pidataBANK0+14	;fetch initializer
   208     002C  00AE               	movwf	(__pdataBANK0+14)& (0+127)
   209     002D  2202               	fcall	__pidataBANK0+15	;fetch initializer
   210     002E  00AF               	movwf	(__pdataBANK0+15)& (0+127)
   211     002F  2203               	fcall	__pidataBANK0+16	;fetch initializer
   212     0030  00B0               	movwf	(__pdataBANK0+16)& (0+127)
   213     0031  2204               	fcall	__pidataBANK0+17	;fetch initializer
   214     0032  00B1               	movwf	(__pdataBANK0+17)& (0+127)
   215     0033  2205               	fcall	__pidataBANK0+18	;fetch initializer
   216     0034  00B2               	movwf	(__pdataBANK0+18)& (0+127)
   217     0035  2206               	fcall	__pidataBANK0+19	;fetch initializer
   218     0036  00B3               	movwf	(__pdataBANK0+19)& (0+127)
   219                           
   220                           ; Clear objects allocated to BANK0
   221     0037  01BE               	clrf	__pbssBANK0& (0+127)
   222     0038  01BF               	clrf	(__pbssBANK0+1)& (0+127)
   223     0039  01C0               	clrf	(__pbssBANK0+2)& (0+127)
   224     003A  01C1               	clrf	(__pbssBANK0+3)& (0+127)
   225     003B  01C2               	clrf	(__pbssBANK0+4)& (0+127)
   226     003C  01C3               	clrf	(__pbssBANK0+5)& (0+127)
   227                           
   228                           ; Clear objects allocated to COMMON
   229     003D  01F7               	clrf	__pbssCOMMON& (0+127)
   230     003E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   231     003F                     end_of_initialization:	
   232                           ;End of C runtime variable initialization code
   233                           
   234     003F                     __end_of__initialization:
   235     003F  0183               	clrf	3
   236     0040  28AA               	ljmp	_main	;jump to C main() function
   237                           
   238                           	psect	bssCOMMON
   239     0077                     __pbssCOMMON:
   240     0077                     _sayac:
   241     0077                     	ds	2
   242                           
   243                           	psect	bssBANK0
   244     003E                     __pbssBANK0:
   245     003E                     _saat:
   246     003E                     	ds	2
   247     0040                     _dakika:
   248     0040                     	ds	2
   249     0042                     _saniye:
   250     0042                     	ds	2
   251                           
   252                           	psect	dataBANK0
   253     0020                     __pdataBANK0:
   254     0020                     _sayilar:
   255     0020                     	ds	20
   256                           
   257                           	psect	cstackCOMMON
   258     0070                     __pcstackCOMMON:
   259     0070                     ?_zamaniArttir:
   260     0070                     ??_zamaniArttir:	
   261                           ; 1 bytes @ 0x0
   262                           
   263     0070                     ?_timer1:	
   264                           ; 1 bytes @ 0x0
   265                           
   266     0070                     ??_timer1:	
   267                           ; 1 bytes @ 0x0
   268                           
   269     0070                     ?_main:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           ; 2 bytes @ 0x0
   274     0070                     	ds	5
   275     0075                     ??___awdiv:
   276     0075                     ??___awmod:	
   277                           ; 1 bytes @ 0x5
   278                           
   279     0075                     ___awmod@counter:	
   280                           ; 1 bytes @ 0x5
   281                           
   282                           
   283                           ; 1 bytes @ 0x5
   284     0075                     	ds	1
   285     0076                     ___awmod@sign:
   286                           
   287                           ; 1 bytes @ 0x6
   288     0076                     	ds	1
   289     0077                     ??_main:
   290                           
   291                           	psect	cstackBANK0
   292     0034                     __pcstackBANK0:	
   293                           ; 1 bytes @ 0x7
   294                           
   295     0034                     ?___awdiv:
   296     0034                     ?___awmod:	
   297                           ; 2 bytes @ 0x0
   298                           
   299     0034                     ___awdiv@divisor:	
   300                           ; 2 bytes @ 0x0
   301                           
   302     0034                     ___awmod@divisor:	
   303                           ; 2 bytes @ 0x0
   304                           
   305                           
   306                           ; 2 bytes @ 0x0
   307     0034                     	ds	2
   308     0036                     ___awdiv@dividend:
   309     0036                     ___awmod@dividend:	
   310                           ; 2 bytes @ 0x2
   311                           
   312                           
   313                           ; 2 bytes @ 0x2
   314     0036                     	ds	2
   315     0038                     ___awdiv@counter:
   316                           
   317                           ; 1 bytes @ 0x4
   318     0038                     	ds	1
   319     0039                     ___awdiv@sign:
   320                           
   321                           ; 1 bytes @ 0x5
   322     0039                     	ds	1
   323     003A                     ___awdiv@quotient:
   324                           
   325                           ; 2 bytes @ 0x6
   326     003A                     	ds	2
   327     003C                     main@sanBirlik:
   328                           
   329                           ; 2 bytes @ 0x8
   330     003C                     	ds	2
   331                           
   332                           	psect	maintext
   333     00AA                     __pmaintext:	
   334 ;;
   335 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   336 ;;
   337 ;; *************** function _main *****************
   338 ;; Defined at:
   339 ;;		line 73 in file "CALAR_SAAT.c"
   340 ;; Parameters:    Size  Location     Type
   341 ;;		None
   342 ;; Auto vars:     Size  Location     Type
   343 ;;  sanBirlik       2    8[BANK0 ] short 
   344 ;;  sanOnluk        2    0        short 
   345 ;;  dkBirlik        2    0        short 
   346 ;;  dkOnluk         2    0        short 
   347 ;;  saatBirlik      2    0        short 
   348 ;;  saatOnluk       2    0        short 
   349 ;; Return value:  Size  Location     Type
   350 ;;                  2   66[None  ] int 
   351 ;; Registers used:
   352 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   353 ;; Tracked objects:
   354 ;;		On entry : B00/0
   355 ;;		On exit  : 0/0
   356 ;;		Unchanged: 0/0
   357 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   358 ;;      Params:         0       0       0       0
   359 ;;      Locals:         0       2       0       0
   360 ;;      Temps:          0       0       0       0
   361 ;;      Totals:         0       2       0       0
   362 ;;Total ram usage:        2 bytes
   363 ;; Hardware stack levels required when called: 3
   364 ;; This function calls:
   365 ;;		___awdiv
   366 ;;		___awmod
   367 ;; This function is called by:
   368 ;;		Startup code after reset
   369 ;; This function uses a non-reentrant model
   370 ;;
   371                           
   372     00AA                     _main:	
   373                           ;psect for function _main
   374                           
   375     00AA                     l996:	
   376                           ;incstack = 0
   377                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   378                           
   379                           
   380                           ;CALAR_SAAT.c: 74:     PCONbits.OSCF=1;
   381     00AA  1683               	bsf	3,5	;RP0=1, select bank1
   382     00AB  1303               	bcf	3,6	;RP1=0, select bank1
   383     00AC  158E               	bsf	14,3	;volatile
   384                           
   385                           ;CALAR_SAAT.c: 75:     INTCONbits.GIE=1;
   386     00AD  178B               	bsf	11,7	;volatile
   387                           
   388                           ;CALAR_SAAT.c: 76:     INTCONbits.PEIE=1;
   389     00AE  170B               	bsf	11,6	;volatile
   390                           
   391                           ;CALAR_SAAT.c: 77:     PIE1bits.TMR1IE=1;
   392     00AF  140C               	bsf	12,0	;volatile
   393                           
   394                           ;CALAR_SAAT.c: 78:     T1CONbits.T1CKPS0=0;
   395     00B0  1283               	bcf	3,5	;RP0=0, select bank0
   396     00B1  1303               	bcf	3,6	;RP1=0, select bank0
   397     00B2  1210               	bcf	16,4	;volatile
   398                           
   399                           ;CALAR_SAAT.c: 79:     T1CONbits.T1CKPS1=0;
   400     00B3  1290               	bcf	16,5	;volatile
   401                           
   402                           ;CALAR_SAAT.c: 80:     T1CONbits.TMR1CS=0;
   403     00B4  1090               	bcf	16,1	;volatile
   404                           
   405                           ;CALAR_SAAT.c: 81:     T1CONbits.TMR1ON=1;
   406     00B5  1410               	bsf	16,0	;volatile
   407     00B6                     l998:
   408                           
   409                           ;CALAR_SAAT.c: 83:     TRISB=0x00;
   410     00B6  1683               	bsf	3,5	;RP0=1, select bank1
   411     00B7  1303               	bcf	3,6	;RP1=0, select bank1
   412     00B8  0186               	clrf	6	;volatile
   413                           
   414                           ;CALAR_SAAT.c: 84:     TRISA=0x00;
   415     00B9  0185               	clrf	5	;volatile
   416                           
   417                           ;CALAR_SAAT.c: 85:     PORTB=0;
   418     00BA  1283               	bcf	3,5	;RP0=0, select bank0
   419     00BB  1303               	bcf	3,6	;RP1=0, select bank0
   420     00BC  0186               	clrf	6	;volatile
   421                           
   422                           ;CALAR_SAAT.c: 86:     PORTA=0;
   423     00BD  0185               	clrf	5	;volatile
   424     00BE                     l1000:
   425     00BE  300A               	movlw	10
   426     00BF  00B4               	movwf	___awdiv@divisor
   427     00C0  3000               	movlw	0
   428     00C1  00B5               	movwf	___awdiv@divisor+1
   429     00C2  083F               	movf	_saat+1,w
   430     00C3  00B7               	movwf	___awdiv@dividend+1
   431     00C4  083E               	movf	_saat,w
   432     00C5  00B6               	movwf	___awdiv@dividend
   433     00C6  2041               	fcall	___awdiv
   434     00C7                     l1002:
   435     00C7  300A               	movlw	10
   436     00C8  1283               	bcf	3,5	;RP0=0, select bank0
   437     00C9  1303               	bcf	3,6	;RP1=0, select bank0
   438     00CA  00B4               	movwf	___awmod@divisor
   439     00CB  3000               	movlw	0
   440     00CC  00B5               	movwf	___awmod@divisor+1
   441     00CD  083F               	movf	_saat+1,w
   442     00CE  00B7               	movwf	___awmod@dividend+1
   443     00CF  083E               	movf	_saat,w
   444     00D0  00B6               	movwf	___awmod@dividend
   445     00D1  210A               	fcall	___awmod
   446     00D2                     l1004:
   447     00D2  300A               	movlw	10
   448     00D3  1283               	bcf	3,5	;RP0=0, select bank0
   449     00D4  1303               	bcf	3,6	;RP1=0, select bank0
   450     00D5  00B4               	movwf	___awdiv@divisor
   451     00D6  3000               	movlw	0
   452     00D7  00B5               	movwf	___awdiv@divisor+1
   453     00D8  0841               	movf	_dakika+1,w
   454     00D9  00B7               	movwf	___awdiv@dividend+1
   455     00DA  0840               	movf	_dakika,w
   456     00DB  00B6               	movwf	___awdiv@dividend
   457     00DC  2041               	fcall	___awdiv
   458     00DD                     l1006:
   459     00DD  300A               	movlw	10
   460     00DE  1283               	bcf	3,5	;RP0=0, select bank0
   461     00DF  1303               	bcf	3,6	;RP1=0, select bank0
   462     00E0  00B4               	movwf	___awmod@divisor
   463     00E1  3000               	movlw	0
   464     00E2  00B5               	movwf	___awmod@divisor+1
   465     00E3  0841               	movf	_dakika+1,w
   466     00E4  00B7               	movwf	___awmod@dividend+1
   467     00E5  0840               	movf	_dakika,w
   468     00E6  00B6               	movwf	___awmod@dividend
   469     00E7  210A               	fcall	___awmod
   470     00E8                     l1008:
   471     00E8  300A               	movlw	10
   472     00E9  1283               	bcf	3,5	;RP0=0, select bank0
   473     00EA  1303               	bcf	3,6	;RP1=0, select bank0
   474     00EB  00B4               	movwf	___awdiv@divisor
   475     00EC  3000               	movlw	0
   476     00ED  00B5               	movwf	___awdiv@divisor+1
   477     00EE  0843               	movf	_saniye+1,w
   478     00EF  00B7               	movwf	___awdiv@dividend+1
   479     00F0  0842               	movf	_saniye,w
   480     00F1  00B6               	movwf	___awdiv@dividend
   481     00F2  2041               	fcall	___awdiv
   482     00F3                     l1010:
   483     00F3  300A               	movlw	10
   484     00F4  1283               	bcf	3,5	;RP0=0, select bank0
   485     00F5  1303               	bcf	3,6	;RP1=0, select bank0
   486     00F6  00B4               	movwf	___awmod@divisor
   487     00F7  3000               	movlw	0
   488     00F8  00B5               	movwf	___awmod@divisor+1
   489     00F9  0843               	movf	_saniye+1,w
   490     00FA  00B7               	movwf	___awmod@dividend+1
   491     00FB  0842               	movf	_saniye,w
   492     00FC  00B6               	movwf	___awmod@dividend
   493     00FD  210A               	fcall	___awmod
   494     00FE  1283               	bcf	3,5	;RP0=0, select bank0
   495     00FF  1303               	bcf	3,6	;RP1=0, select bank0
   496     0100  0835               	movf	?___awmod+1,w
   497     0101  00BD               	movwf	main@sanBirlik+1
   498     0102  0834               	movf	?___awmod,w
   499     0103  00BC               	movwf	main@sanBirlik
   500     0104                     l1012:
   501                           
   502                           ;CALAR_SAAT.c: 91:         degisken=sanBirlik;
   503     0104  083D               	movf	main@sanBirlik+1,w
   504     0105  00C5               	movwf	_degisken+1
   505     0106  083C               	movf	main@sanBirlik,w
   506     0107  00C4               	movwf	_degisken
   507     0108  28BE               	goto	l1000
   508     0109  280E               	ljmp	start
   509     010A                     __end_of_main:
   510                           
   511                           	psect	text1
   512     010A                     __ptext1:	
   513 ;; *************** function ___awmod *****************
   514 ;; Defined at:
   515 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
   516 ;; Parameters:    Size  Location     Type
   517 ;;  divisor         2    0[BANK0 ] int 
   518 ;;  dividend        2    2[BANK0 ] int 
   519 ;; Auto vars:     Size  Location     Type
   520 ;;  sign            1    6[COMMON] unsigned char 
   521 ;;  counter         1    5[COMMON] unsigned char 
   522 ;; Return value:  Size  Location     Type
   523 ;;                  2    0[BANK0 ] int 
   524 ;; Registers used:
   525 ;;		wreg, status,2, status,0, btemp+1
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   531 ;;      Params:         0       4       0       0
   532 ;;      Locals:         2       0       0       0
   533 ;;      Temps:          0       0       0       0
   534 ;;      Totals:         2       4       0       0
   535 ;;Total ram usage:        6 bytes
   536 ;; Hardware stack levels used: 1
   537 ;; Hardware stack levels required when called: 2
   538 ;; This function calls:
   539 ;;		Nothing
   540 ;; This function is called by:
   541 ;;		_main
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545     010A                     ___awmod:	
   546                           ;psect for function ___awmod
   547                           
   548     010A                     l958:	
   549                           ;incstack = 0
   550                           ; Regs used in ___awmod: [wreg+status,2+status,0+btemp+1]
   551                           
   552     010A  01F6               	clrf	___awmod@sign
   553     010B                     l960:
   554     010B  1283               	bcf	3,5	;RP0=0, select bank0
   555     010C  1303               	bcf	3,6	;RP1=0, select bank0
   556     010D  1FB7               	btfss	___awmod@dividend+1,7
   557     010E  2910               	goto	u611
   558     010F  2911               	goto	u610
   559     0110                     u611:
   560     0110  2918               	goto	l966
   561     0111                     u610:
   562     0111                     l962:
   563     0111  09B6               	comf	___awmod@dividend,f
   564     0112  09B7               	comf	___awmod@dividend+1,f
   565     0113  0AB6               	incf	___awmod@dividend,f
   566     0114  1903               	skipnz
   567     0115  0AB7               	incf	___awmod@dividend+1,f
   568     0116                     l964:
   569     0116  01F6               	clrf	___awmod@sign
   570     0117  0AF6               	incf	___awmod@sign,f
   571     0118                     l966:
   572     0118  1FB5               	btfss	___awmod@divisor+1,7
   573     0119  291B               	goto	u621
   574     011A  291C               	goto	u620
   575     011B                     u621:
   576     011B  2921               	goto	l970
   577     011C                     u620:
   578     011C                     l968:
   579     011C  09B4               	comf	___awmod@divisor,f
   580     011D  09B5               	comf	___awmod@divisor+1,f
   581     011E  0AB4               	incf	___awmod@divisor,f
   582     011F  1903               	skipnz
   583     0120  0AB5               	incf	___awmod@divisor+1,f
   584     0121                     l970:
   585     0121  0834               	movf	___awmod@divisor,w
   586     0122  0435               	iorwf	___awmod@divisor+1,w
   587     0123  1903               	btfsc	3,2
   588     0124  2926               	goto	u631
   589     0125  2927               	goto	u630
   590     0126                     u631:
   591     0126  2956               	goto	l988
   592     0127                     u630:
   593     0127                     l972:
   594     0127  01F5               	clrf	___awmod@counter
   595     0128  0AF5               	incf	___awmod@counter,f
   596     0129  2935               	goto	l978
   597     012A                     l974:
   598     012A  3001               	movlw	1
   599     012B                     u645:
   600     012B  1003               	clrc
   601     012C  0DB4               	rlf	___awmod@divisor,f
   602     012D  0DB5               	rlf	___awmod@divisor+1,f
   603     012E  3EFF               	addlw	-1
   604     012F  1D03               	skipz
   605     0130  292B               	goto	u645
   606     0131                     l976:
   607     0131  3001               	movlw	1
   608     0132  00FF               	movwf	btemp+1
   609     0133  087F               	movf	btemp+1,w
   610     0134  07F5               	addwf	___awmod@counter,f
   611     0135                     l978:
   612     0135  1FB5               	btfss	___awmod@divisor+1,7
   613     0136  2938               	goto	u651
   614     0137  2939               	goto	u650
   615     0138                     u651:
   616     0138  292A               	goto	l974
   617     0139                     u650:
   618     0139                     l980:
   619     0139  0835               	movf	___awmod@divisor+1,w
   620     013A  0237               	subwf	___awmod@dividend+1,w
   621     013B  1D03               	skipz
   622     013C  293F               	goto	u665
   623     013D  0834               	movf	___awmod@divisor,w
   624     013E  0236               	subwf	___awmod@dividend,w
   625     013F                     u665:
   626     013F  1C03               	skipc
   627     0140  2942               	goto	u661
   628     0141  2943               	goto	u660
   629     0142                     u661:
   630     0142  2949               	goto	l984
   631     0143                     u660:
   632     0143                     l982:
   633     0143  0834               	movf	___awmod@divisor,w
   634     0144  02B6               	subwf	___awmod@dividend,f
   635     0145  0835               	movf	___awmod@divisor+1,w
   636     0146  1C03               	skipc
   637     0147  03B7               	decf	___awmod@dividend+1,f
   638     0148  02B7               	subwf	___awmod@dividend+1,f
   639     0149                     l984:
   640     0149  3001               	movlw	1
   641     014A                     u675:
   642     014A  1003               	clrc
   643     014B  0CB5               	rrf	___awmod@divisor+1,f
   644     014C  0CB4               	rrf	___awmod@divisor,f
   645     014D  3EFF               	addlw	-1
   646     014E  1D03               	skipz
   647     014F  294A               	goto	u675
   648     0150                     l986:
   649     0150  3001               	movlw	1
   650     0151  02F5               	subwf	___awmod@counter,f
   651     0152  1D03               	btfss	3,2
   652     0153  2955               	goto	u681
   653     0154  2956               	goto	u680
   654     0155                     u681:
   655     0155  2939               	goto	l980
   656     0156                     u680:
   657     0156                     l988:
   658     0156  0876               	movf	___awmod@sign,w
   659     0157  1903               	btfsc	3,2
   660     0158  295A               	goto	u691
   661     0159  295B               	goto	u690
   662     015A                     u691:
   663     015A  2960               	goto	l992
   664     015B                     u690:
   665     015B                     l990:
   666     015B  09B6               	comf	___awmod@dividend,f
   667     015C  09B7               	comf	___awmod@dividend+1,f
   668     015D  0AB6               	incf	___awmod@dividend,f
   669     015E  1903               	skipnz
   670     015F  0AB7               	incf	___awmod@dividend+1,f
   671     0160                     l992:
   672     0160  0837               	movf	___awmod@dividend+1,w
   673     0161  00B5               	movwf	?___awmod+1
   674     0162  0836               	movf	___awmod@dividend,w
   675     0163  00B4               	movwf	?___awmod
   676     0164                     l322:
   677     0164  0008               	return
   678     0165                     __end_of___awmod:
   679                           
   680                           	psect	text2
   681     0041                     __ptext2:	
   682 ;; *************** function ___awdiv *****************
   683 ;; Defined at:
   684 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;  divisor         2    0[BANK0 ] int 
   687 ;;  dividend        2    2[BANK0 ] int 
   688 ;; Auto vars:     Size  Location     Type
   689 ;;  quotient        2    6[BANK0 ] int 
   690 ;;  sign            1    5[BANK0 ] unsigned char 
   691 ;;  counter         1    4[BANK0 ] unsigned char 
   692 ;; Return value:  Size  Location     Type
   693 ;;                  2    0[BANK0 ] int 
   694 ;; Registers used:
   695 ;;		wreg, status,2, status,0, btemp+1
   696 ;; Tracked objects:
   697 ;;		On entry : 0/0
   698 ;;		On exit  : 0/0
   699 ;;		Unchanged: 0/0
   700 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   701 ;;      Params:         0       4       0       0
   702 ;;      Locals:         0       4       0       0
   703 ;;      Temps:          0       0       0       0
   704 ;;      Totals:         0       8       0       0
   705 ;;Total ram usage:        8 bytes
   706 ;; Hardware stack levels used: 1
   707 ;; Hardware stack levels required when called: 2
   708 ;; This function calls:
   709 ;;		Nothing
   710 ;; This function is called by:
   711 ;;		_main
   712 ;; This function uses a non-reentrant model
   713 ;;
   714                           
   715     0041                     ___awdiv:	
   716                           ;psect for function ___awdiv
   717                           
   718     0041                     l914:	
   719                           ;incstack = 0
   720                           ; Regs used in ___awdiv: [wreg+status,2+status,0+btemp+1]
   721                           
   722     0041  1283               	bcf	3,5	;RP0=0, select bank0
   723     0042  1303               	bcf	3,6	;RP1=0, select bank0
   724     0043  01B9               	clrf	___awdiv@sign
   725     0044                     l916:
   726     0044  1FB5               	btfss	___awdiv@divisor+1,7
   727     0045  2847               	goto	u511
   728     0046  2848               	goto	u510
   729     0047                     u511:
   730     0047  284F               	goto	l922
   731     0048                     u510:
   732     0048                     l918:
   733     0048  09B4               	comf	___awdiv@divisor,f
   734     0049  09B5               	comf	___awdiv@divisor+1,f
   735     004A  0AB4               	incf	___awdiv@divisor,f
   736     004B  1903               	skipnz
   737     004C  0AB5               	incf	___awdiv@divisor+1,f
   738     004D                     l920:
   739     004D  01B9               	clrf	___awdiv@sign
   740     004E  0AB9               	incf	___awdiv@sign,f
   741     004F                     l922:
   742     004F  1FB7               	btfss	___awdiv@dividend+1,7
   743     0050  2852               	goto	u521
   744     0051  2853               	goto	u520
   745     0052                     u521:
   746     0052  285C               	goto	l928
   747     0053                     u520:
   748     0053                     l924:
   749     0053  09B6               	comf	___awdiv@dividend,f
   750     0054  09B7               	comf	___awdiv@dividend+1,f
   751     0055  0AB6               	incf	___awdiv@dividend,f
   752     0056  1903               	skipnz
   753     0057  0AB7               	incf	___awdiv@dividend+1,f
   754     0058                     l926:
   755     0058  3001               	movlw	1
   756     0059  00FF               	movwf	btemp+1
   757     005A  087F               	movf	btemp+1,w
   758     005B  06B9               	xorwf	___awdiv@sign,f
   759     005C                     l928:
   760     005C  01BA               	clrf	___awdiv@quotient
   761     005D  01BB               	clrf	___awdiv@quotient+1
   762     005E                     l930:
   763     005E  0834               	movf	___awdiv@divisor,w
   764     005F  0435               	iorwf	___awdiv@divisor+1,w
   765     0060  1903               	btfsc	3,2
   766     0061  2863               	goto	u531
   767     0062  2864               	goto	u530
   768     0063                     u531:
   769     0063  289B               	goto	l950
   770     0064                     u530:
   771     0064                     l932:
   772     0064  01B8               	clrf	___awdiv@counter
   773     0065  0AB8               	incf	___awdiv@counter,f
   774     0066  2872               	goto	l938
   775     0067                     l934:
   776     0067  3001               	movlw	1
   777     0068                     u545:
   778     0068  1003               	clrc
   779     0069  0DB4               	rlf	___awdiv@divisor,f
   780     006A  0DB5               	rlf	___awdiv@divisor+1,f
   781     006B  3EFF               	addlw	-1
   782     006C  1D03               	skipz
   783     006D  2868               	goto	u545
   784     006E                     l936:
   785     006E  3001               	movlw	1
   786     006F  00FF               	movwf	btemp+1
   787     0070  087F               	movf	btemp+1,w
   788     0071  07B8               	addwf	___awdiv@counter,f
   789     0072                     l938:
   790     0072  1FB5               	btfss	___awdiv@divisor+1,7
   791     0073  2875               	goto	u551
   792     0074  2876               	goto	u550
   793     0075                     u551:
   794     0075  2867               	goto	l934
   795     0076                     u550:
   796     0076                     l940:
   797     0076  3001               	movlw	1
   798     0077                     u565:
   799     0077  1003               	clrc
   800     0078  0DBA               	rlf	___awdiv@quotient,f
   801     0079  0DBB               	rlf	___awdiv@quotient+1,f
   802     007A  3EFF               	addlw	-1
   803     007B  1D03               	skipz
   804     007C  2877               	goto	u565
   805     007D  0835               	movf	___awdiv@divisor+1,w
   806     007E  0237               	subwf	___awdiv@dividend+1,w
   807     007F  1D03               	skipz
   808     0080  2883               	goto	u575
   809     0081  0834               	movf	___awdiv@divisor,w
   810     0082  0236               	subwf	___awdiv@dividend,w
   811     0083                     u575:
   812     0083  1C03               	skipc
   813     0084  2886               	goto	u571
   814     0085  2887               	goto	u570
   815     0086                     u571:
   816     0086  288E               	goto	l946
   817     0087                     u570:
   818     0087                     l942:
   819     0087  0834               	movf	___awdiv@divisor,w
   820     0088  02B6               	subwf	___awdiv@dividend,f
   821     0089  0835               	movf	___awdiv@divisor+1,w
   822     008A  1C03               	skipc
   823     008B  03B7               	decf	___awdiv@dividend+1,f
   824     008C  02B7               	subwf	___awdiv@dividend+1,f
   825     008D                     l944:
   826     008D  143A               	bsf	___awdiv@quotient,0
   827     008E                     l946:
   828     008E  3001               	movlw	1
   829     008F                     u585:
   830     008F  1003               	clrc
   831     0090  0CB5               	rrf	___awdiv@divisor+1,f
   832     0091  0CB4               	rrf	___awdiv@divisor,f
   833     0092  3EFF               	addlw	-1
   834     0093  1D03               	skipz
   835     0094  288F               	goto	u585
   836     0095                     l948:
   837     0095  3001               	movlw	1
   838     0096  02B8               	subwf	___awdiv@counter,f
   839     0097  1D03               	btfss	3,2
   840     0098  289A               	goto	u591
   841     0099  289B               	goto	u590
   842     009A                     u591:
   843     009A  2876               	goto	l940
   844     009B                     u590:
   845     009B                     l950:
   846     009B  0839               	movf	___awdiv@sign,w
   847     009C  1903               	btfsc	3,2
   848     009D  289F               	goto	u601
   849     009E  28A0               	goto	u600
   850     009F                     u601:
   851     009F  28A5               	goto	l954
   852     00A0                     u600:
   853     00A0                     l952:
   854     00A0  09BA               	comf	___awdiv@quotient,f
   855     00A1  09BB               	comf	___awdiv@quotient+1,f
   856     00A2  0ABA               	incf	___awdiv@quotient,f
   857     00A3  1903               	skipnz
   858     00A4  0ABB               	incf	___awdiv@quotient+1,f
   859     00A5                     l954:
   860     00A5  083B               	movf	___awdiv@quotient+1,w
   861     00A6  00B5               	movwf	?___awdiv+1
   862     00A7  083A               	movf	___awdiv@quotient,w
   863     00A8  00B4               	movwf	?___awdiv
   864     00A9                     l309:
   865     00A9  0008               	return
   866     00AA                     __end_of___awdiv:
   867                           
   868                           	psect	text3
   869     01AD                     __ptext3:	
   870 ;; *************** function _timer1 *****************
   871 ;; Defined at:
   872 ;;		line 50 in file "CALAR_SAAT.c"
   873 ;; Parameters:    Size  Location     Type
   874 ;;		None
   875 ;; Auto vars:     Size  Location     Type
   876 ;;		None
   877 ;; Return value:  Size  Location     Type
   878 ;;                  1    wreg      void 
   879 ;; Registers used:
   880 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   881 ;; Tracked objects:
   882 ;;		On entry : 0/0
   883 ;;		On exit  : 0/0
   884 ;;		Unchanged: 0/0
   885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   886 ;;      Params:         0       0       0       0
   887 ;;      Locals:         0       0       0       0
   888 ;;      Temps:          5       0       0       0
   889 ;;      Totals:         5       0       0       0
   890 ;;Total ram usage:        5 bytes
   891 ;; Hardware stack levels used: 1
   892 ;; Hardware stack levels required when called: 1
   893 ;; This function calls:
   894 ;;		_zamaniArttir
   895 ;; This function is called by:
   896 ;;		Interrupt level 1
   897 ;; This function uses a non-reentrant model
   898 ;;
   899                           
   900     01AD                     _timer1:	
   901                           ;psect for function _timer1
   902                           
   903     01AD                     i1l868:
   904                           
   905                           ;CALAR_SAAT.c: 51:     if(TMR1IF){
   906     01AD  1283               	bcf	3,5	;RP0=0, select bank0
   907     01AE  1303               	bcf	3,6	;RP1=0, select bank0
   908     01AF  1C0C               	btfss	12,0	;volatile
   909     01B0  29B2               	goto	u48_21
   910     01B1  29B3               	goto	u48_20
   911     01B2                     u48_21:
   912     01B2  29E8               	goto	i1l62
   913     01B3                     u48_20:
   914     01B3                     i1l870:
   915                           
   916                           ;CALAR_SAAT.c: 52:         TMR1=15536;
   917     01B3  303C               	movlw	60
   918     01B4  008F               	movwf	15	;volatile
   919     01B5  30B0               	movlw	176
   920     01B6  008E               	movwf	14	;volatile
   921                           
   922                           ;CALAR_SAAT.c: 53:         TMR1IF=0;
   923     01B7  100C               	bcf	12,0	;volatile
   924     01B8                     i1l872:
   925                           
   926                           ;CALAR_SAAT.c: 54:         sayac++;
   927     01B8  3001               	movlw	1
   928     01B9  07F7               	addwf	_sayac,f
   929     01BA  1803               	skipnc
   930     01BB  0AF8               	incf	_sayac+1,f
   931     01BC  3000               	movlw	0
   932     01BD  07F8               	addwf	_sayac+1,f
   933     01BE                     i1l874:
   934                           
   935                           ;CALAR_SAAT.c: 55:         if(sayac==20){
   936     01BE  3014               	movlw	20
   937     01BF  0677               	xorwf	_sayac,w
   938     01C0  0478               	iorwf	_sayac+1,w
   939     01C1  1D03               	btfss	3,2
   940     01C2  29C4               	goto	u49_21
   941     01C3  29C5               	goto	u49_20
   942     01C4                     u49_21:
   943     01C4  29D2               	goto	i1l884
   944     01C5                     u49_20:
   945     01C5                     i1l876:
   946                           
   947                           ;CALAR_SAAT.c: 57:             zamaniArttir();
   948     01C5  2165               	fcall	_zamaniArttir
   949     01C6                     i1l878:
   950                           
   951                           ;CALAR_SAAT.c: 58:             PORTB=sayilar[degisken];
   952     01C6  1283               	bcf	3,5	;RP0=0, select bank0
   953     01C7  1303               	bcf	3,6	;RP1=0, select bank0
   954     01C8  0844               	movf	_degisken,w
   955     01C9  00F0               	movwf	??_timer1
   956     01CA  0770               	addwf	??_timer1,w
   957     01CB  3E20               	addlw	(low (_sayilar| 0))& (0+255)
   958     01CC  0084               	movwf	4
   959     01CD  1383               	bcf	3,7	;select IRP bank0
   960     01CE  0800               	movf	0,w
   961     01CF  0086               	movwf	6	;volatile
   962     01D0                     i1l880:
   963                           
   964                           ;CALAR_SAAT.c: 59:             RA2=1;
   965     01D0  1505               	bsf	5,2	;volatile
   966     01D1                     i1l882:
   967                           
   968                           ;CALAR_SAAT.c: 60:             RA1=0;
   969     01D1  1085               	bcf	5,1	;volatile
   970     01D2                     i1l884:
   971                           
   972                           ;CALAR_SAAT.c: 62:         if(sayac==40){
   973     01D2  3028               	movlw	40
   974     01D3  0677               	xorwf	_sayac,w
   975     01D4  0478               	iorwf	_sayac+1,w
   976     01D5  1D03               	btfss	3,2
   977     01D6  29D8               	goto	u50_21
   978     01D7  29D9               	goto	u50_20
   979     01D8                     u50_21:
   980     01D8  29E8               	goto	i1l62
   981     01D9                     u50_20:
   982     01D9                     i1l886:
   983                           
   984                           ;CALAR_SAAT.c: 63:             sayac=0;
   985     01D9  01F7               	clrf	_sayac
   986     01DA  01F8               	clrf	_sayac+1
   987     01DB                     i1l888:
   988                           
   989                           ;CALAR_SAAT.c: 64:             zamaniArttir();
   990     01DB  2165               	fcall	_zamaniArttir
   991     01DC                     i1l890:
   992                           
   993                           ;CALAR_SAAT.c: 65:             PORTB=sayilar[degisken];
   994     01DC  1283               	bcf	3,5	;RP0=0, select bank0
   995     01DD  1303               	bcf	3,6	;RP1=0, select bank0
   996     01DE  0844               	movf	_degisken,w
   997     01DF  00F0               	movwf	??_timer1
   998     01E0  0770               	addwf	??_timer1,w
   999     01E1  3E20               	addlw	(low (_sayilar| 0))& (0+255)
  1000     01E2  0084               	movwf	4
  1001     01E3  1383               	bcf	3,7	;select IRP bank0
  1002     01E4  0800               	movf	0,w
  1003     01E5  0086               	movwf	6	;volatile
  1004     01E6                     i1l892:
  1005                           
  1006                           ;CALAR_SAAT.c: 66:             RA2=0;
  1007     01E6  1105               	bcf	5,2	;volatile
  1008     01E7                     i1l894:
  1009                           
  1010                           ;CALAR_SAAT.c: 67:             RA1=1;
  1011     01E7  1485               	bsf	5,1	;volatile
  1012     01E8                     i1l62:
  1013     01E8  0874               	movf	??_timer1+4,w
  1014     01E9  00FF               	movwf	btemp+1
  1015     01EA  0873               	movf	??_timer1+3,w
  1016     01EB  008A               	movwf	10
  1017     01EC  0872               	movf	??_timer1+2,w
  1018     01ED  0084               	movwf	4
  1019     01EE  0E71               	swapf	??_timer1+1,w
  1020     01EF  0083               	movwf	3
  1021     01F0  0EFE               	swapf	btemp,f
  1022     01F1  0E7E               	swapf	btemp,w
  1023     01F2  0009               	retfie
  1024     01F3                     __end_of_timer1:
  1025                           
  1026                           	psect	intentry
  1027     0004                     __pintentry:	
  1028                           ;incstack = 0
  1029                           ; Regs used in _timer1: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1030                           
  1031     0004                     interrupt_function:
  1032     007E                     saved_w	set	btemp
  1033     0004  00FE               	movwf	btemp
  1034     0005  0E03               	swapf	3,w
  1035     0006  00F1               	movwf	??_timer1+1
  1036     0007  0804               	movf	4,w
  1037     0008  00F2               	movwf	??_timer1+2
  1038     0009  080A               	movf	10,w
  1039     000A  00F3               	movwf	??_timer1+3
  1040     000B  087F               	movf	btemp+1,w
  1041     000C  00F4               	movwf	??_timer1+4
  1042     000D  29AD               	ljmp	_timer1
  1043                           
  1044                           	psect	text4
  1045     0165                     __ptext4:	
  1046 ;; *************** function _zamaniArttir *****************
  1047 ;; Defined at:
  1048 ;;		line 24 in file "CALAR_SAAT.c"
  1049 ;; Parameters:    Size  Location     Type
  1050 ;;		None
  1051 ;; Auto vars:     Size  Location     Type
  1052 ;;		None
  1053 ;; Return value:  Size  Location     Type
  1054 ;;                  1    wreg      void 
  1055 ;; Registers used:
  1056 ;;		wreg, status,2, btemp+1
  1057 ;; Tracked objects:
  1058 ;;		On entry : 0/0
  1059 ;;		On exit  : 0/0
  1060 ;;		Unchanged: 0/0
  1061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  1062 ;;      Params:         0       0       0       0
  1063 ;;      Locals:         0       0       0       0
  1064 ;;      Temps:          0       0       0       0
  1065 ;;      Totals:         0       0       0       0
  1066 ;;Total ram usage:        0 bytes
  1067 ;; Hardware stack levels used: 1
  1068 ;; This function calls:
  1069 ;;		Nothing
  1070 ;; This function is called by:
  1071 ;;		_timer1
  1072 ;; This function uses a non-reentrant model
  1073 ;;
  1074                           
  1075     0165                     _zamaniArttir:	
  1076                           ;psect for function _zamaniArttir
  1077                           
  1078     0165                     i1l768:	
  1079                           ;incstack = 0
  1080                           ; Regs used in _zamaniArttir: [wreg+status,2+btemp+1]
  1081                           
  1082                           
  1083                           ;CALAR_SAAT.c: 25:     saniye++;
  1084     0165  3001               	movlw	1
  1085     0166  1283               	bcf	3,5	;RP0=0, select bank0
  1086     0167  1303               	bcf	3,6	;RP1=0, select bank0
  1087     0168  07C2               	addwf	_saniye,f
  1088     0169  1803               	skipnc
  1089     016A  0AC3               	incf	_saniye+1,f
  1090     016B  3000               	movlw	0
  1091     016C  07C3               	addwf	_saniye+1,f
  1092     016D                     i1l770:
  1093                           
  1094                           ;CALAR_SAAT.c: 26:     if(saniye>=60){
  1095     016D  0843               	movf	_saniye+1,w
  1096     016E  3A80               	xorlw	128
  1097     016F  00FF               	movwf	btemp+1
  1098     0170  3080               	movlw	128
  1099     0171  027F               	subwf	btemp+1,w
  1100     0172  1D03               	skipz
  1101     0173  2976               	goto	u26_25
  1102     0174  303C               	movlw	60
  1103     0175  0242               	subwf	_saniye,w
  1104     0176                     u26_25:
  1105     0176  1C03               	skipc
  1106     0177  2979               	goto	u26_21
  1107     0178  297A               	goto	u26_20
  1108     0179                     u26_21:
  1109     0179  29AC               	goto	i1l42
  1110     017A                     u26_20:
  1111     017A                     i1l772:
  1112                           
  1113                           ;CALAR_SAAT.c: 27:             saniye=0;
  1114     017A  1283               	bcf	3,5	;RP0=0, select bank0
  1115     017B  1303               	bcf	3,6	;RP1=0, select bank0
  1116     017C  01C2               	clrf	_saniye
  1117     017D  01C3               	clrf	_saniye+1
  1118     017E                     i1l774:
  1119                           
  1120                           ;CALAR_SAAT.c: 28:             dakika++;
  1121     017E  3001               	movlw	1
  1122     017F  07C0               	addwf	_dakika,f
  1123     0180  1803               	skipnc
  1124     0181  0AC1               	incf	_dakika+1,f
  1125     0182  3000               	movlw	0
  1126     0183  07C1               	addwf	_dakika+1,f
  1127     0184                     i1l776:
  1128                           
  1129                           ;CALAR_SAAT.c: 29:             if(dakika>=60){
  1130     0184  0841               	movf	_dakika+1,w
  1131     0185  3A80               	xorlw	128
  1132     0186  00FF               	movwf	btemp+1
  1133     0187  3080               	movlw	128
  1134     0188  027F               	subwf	btemp+1,w
  1135     0189  1D03               	skipz
  1136     018A  298D               	goto	u27_25
  1137     018B  303C               	movlw	60
  1138     018C  0240               	subwf	_dakika,w
  1139     018D                     u27_25:
  1140     018D  1C03               	skipc
  1141     018E  2990               	goto	u27_21
  1142     018F  2991               	goto	u27_20
  1143     0190                     u27_21:
  1144     0190  29AC               	goto	i1l42
  1145     0191                     u27_20:
  1146     0191                     i1l778:
  1147                           
  1148                           ;CALAR_SAAT.c: 30:                 dakika=0;
  1149     0191  1283               	bcf	3,5	;RP0=0, select bank0
  1150     0192  1303               	bcf	3,6	;RP1=0, select bank0
  1151     0193  01C0               	clrf	_dakika
  1152     0194  01C1               	clrf	_dakika+1
  1153     0195                     i1l780:
  1154                           
  1155                           ;CALAR_SAAT.c: 31:                 saat++;
  1156     0195  3001               	movlw	1
  1157     0196  07BE               	addwf	_saat,f
  1158     0197  1803               	skipnc
  1159     0198  0ABF               	incf	_saat+1,f
  1160     0199  3000               	movlw	0
  1161     019A  07BF               	addwf	_saat+1,f
  1162     019B                     i1l782:
  1163                           
  1164                           ;CALAR_SAAT.c: 32:                 if(saat>=24){
  1165     019B  083F               	movf	_saat+1,w
  1166     019C  3A80               	xorlw	128
  1167     019D  00FF               	movwf	btemp+1
  1168     019E  3080               	movlw	128
  1169     019F  027F               	subwf	btemp+1,w
  1170     01A0  1D03               	skipz
  1171     01A1  29A4               	goto	u28_25
  1172     01A2  3018               	movlw	24
  1173     01A3  023E               	subwf	_saat,w
  1174     01A4                     u28_25:
  1175     01A4  1C03               	skipc
  1176     01A5  29A7               	goto	u28_21
  1177     01A6  29A8               	goto	u28_20
  1178     01A7                     u28_21:
  1179     01A7  29AC               	goto	i1l42
  1180     01A8                     u28_20:
  1181     01A8                     i1l784:
  1182                           
  1183                           ;CALAR_SAAT.c: 33:                     saat=0;
  1184     01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1185     01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1186     01AA  01BE               	clrf	_saat
  1187     01AB  01BF               	clrf	_saat+1
  1188     01AC                     i1l42:
  1189     01AC  0008               	return
  1190     01AD                     __end_of_zamaniArttir:
  1191     007E                     btemp	set	126	;btemp
  1192     007E                     wtemp0	set	126
  1193                           
  1194                           	psect	config
  1195                           
  1196                           ;Config register CONFIG @ 0x2007
  1197                           ;	Oscillator Selection bits
  1198                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
  1199                           ;	Watchdog Timer Enable bit
  1200                           ;	WDTE = OFF, WDT disabled
  1201                           ;	Power-up Timer Enable bit
  1202                           ;	PWRTE = OFF, PWRT disabled
  1203                           ;	RA5/MCLR/VPP Pin Function Select bit
  1204                           ;	MCLRE = OFF, RA5/MCLR/VPP pin function is digital input, MCLR internally tied to VDD
  1205                           ;	Brown-out Detect Enable bit
  1206                           ;	BOREN = OFF, BOD disabled
  1207                           ;	Low-Voltage Programming Enable bit
  1208                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
  1209                           ;	Data EE Memory Code Protection bit
  1210                           ;	CPD = OFF, Data memory code protection off
  1211                           ;	Flash Program Memory Code Protection bit
  1212                           ;	CP = OFF, Code protection off
  1213     2007                     	org	8199
  1214     2007  3F18               	dw	16152

Data Sizes:
    Strings     0
    Constant    0
    Data        20
    BSS         8
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       9
    BANK0            80     10      38
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    sayilar	PTR int [10] size(2) Largest target is 512
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 
		 -> RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), RAM(DATA[512]), 
		 -> RAM(DATA[512]), RAM(DATA[512]), 


Critical Paths under _main in COMMON

    _main->___awmod

Critical Paths under _timer1 in COMMON

    None.

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _timer1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    2007
                                              8 BANK0      2     2      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              6     2      4     973
                                              5 COMMON     2     2      0
                                              0 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              8     4      4     985
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _timer1                                               5     5      0       0
                                              0 COMMON     5     5      0
                       _zamaniArttir
 ---------------------------------------------------------------------------------
 (3) _zamaniArttir                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   ___awdiv
   ___awmod

 _timer1 (ROOT)
   _zamaniArttir

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               30      0       0       9        0.0%
BITBANK2            30      0       0       8        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      A      26       3       47.5%
BITBANK0            50      0       0       5        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      2F      10        0.0%
ABS                  0      0      2F       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA              80      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Fri Dec 15 19:53:46 2023

           ___awdiv@sign 0039                      l322 0164                      l309 00A9  
                    l920 004D                      l930 005E                      l922 004F  
                    l914 0041                      l940 0076                      l932 0064  
                    l924 0053                      l916 0044                      l942 0087  
                    l934 0067                      l950 009B                      l926 0058  
                    l918 0048                      l952 00A0                      l944 008D  
                    l936 006E                      l928 005C                      l960 010B  
                    l954 00A5                      l946 008E                      l938 0072  
                    l970 0121                      l962 0111                      l948 0095  
                    l980 0139                      l972 0127                      l964 0116  
                    l990 015B                      l982 0143                      l974 012A  
                    l966 0118                      l958 010A                      l992 0160  
                    l984 0149                      l976 0131                      l968 011C  
                    l986 0150                      l978 0135                      l988 0156  
                    l996 00AA                      l998 00B6                      _RA1 0029  
                    _RA2 002A                      u510 0048                      u511 0047  
                    u600 00A0                      u520 0053                      u601 009F  
                    u521 0052                      u530 0064                      u610 0111  
                    u531 0063                      u611 0110                      u620 011C  
                    u621 011B                      u550 0076                      u630 0127  
                    u551 0075                      u631 0126                      u545 0068  
                    u570 0087                      u650 0139                      u571 0086  
                    u651 0138                      u660 0143                      u565 0077  
                    u661 0142                      u645 012B                      u590 009B  
                    u591 009A                      u575 0083                      u680 0156  
                    u585 008F                      u681 0155                      u665 013F  
                    u690 015B                      u691 015A                      u675 014A  
                    fsr0 0004                      indf 0000             ___awmod@sign 0076  
                   l1000 00BE                     l1010 00F3                     l1002 00C7  
                   l1012 0104                     l1004 00D2                     l1006 00DD  
                   l1008 00E8                     i1l42 01AC                     i1l62 01E8  
                   _TMR1 000E                     _main 00AA                     _saat 003E  
                   btemp 007E                     start 000E                    ?_main 0070  
        __end_of___awdiv 00AA          __end_of___awmod 0165          ___awdiv@divisor 0034  
                  i1l770 016D                    i1l780 0195                    i1l772 017A  
                  i1l782 019B                    i1l774 017E                    i1l870 01B3  
                  i1l784 01A8                    i1l776 0184                    i1l768 0165  
                  i1l880 01D0                    i1l872 01B8                    i1l778 0191  
                  i1l890 01DC                    i1l882 01D1                    i1l874 01BE  
                  i1l892 01E6                    i1l876 01C5                    i1l884 01D2  
                  i1l868 01AD                    i1l894 01E7                    i1l886 01D9  
                  i1l878 01C6                    i1l888 01DB          ___awdiv@counter 0038  
                  u26_20 017A                    u50_20 01D9                    u26_21 0179  
                  u50_21 01D8                    u26_25 0176                    u27_20 0191  
                  u27_21 0190                    _PORTA 0005                    _PORTB 0006  
                  u27_25 018D                    u28_20 01A8                    u28_21 01A7  
                  u28_25 01A4                    u48_20 01B3                    u48_21 01B2  
                  u49_20 01C5                    u49_21 01C4                    _TRISA 0085  
                  _TRISB 0086                    _sayac 0077                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 010A                   ??_main 0077         ___awdiv@dividend 0036  
                 _TMR1IF 0060            main@sanBirlik 003C                ??___awdiv 0075  
                 _dakika 0040                ??___awmod 0075         ___awdiv@quotient 003A  
                 _saniye 0042          ___awmod@divisor 0034                   _timer1 01AD  
        ___awmod@counter 0075                   saved_w 007E  __end_of__initialization 003F  
         __pcstackCOMMON 0070             __pidataBANK0 01F3               __pbssBANK0 003E  
             __pmaintext 00AA               __pintentry 0004                  ?_timer1 0070  
                ___awdiv 0041                  ___awmod 010A                  __ptext1 010A  
                __ptext2 0041                  __ptext3 01AD                  __ptext4 0165  
              _T1CONbits 0010         ___awmod@dividend 0036                  _sayilar 0020  
   end_of_initialization 003F            ?_zamaniArttir 0070           __end_of_timer1 01F3  
    start_initialization 000F           ??_zamaniArttir 0070              __pdataBANK0 0020  
               ??_timer1 0070              __pbssCOMMON 0077                ___latbits 0000  
          __pcstackBANK0 0034                __pnvBANK0 0044                 ?___awdiv 0034  
               ?___awmod 0034        interrupt_function 0004                 _PIE1bits 008C  
               _PCONbits 008E     __end_of_zamaniArttir 01AD                 _degisken 0044  
             _INTCONbits 000B                 intlevel1 0000             _zamaniArttir 0165  
