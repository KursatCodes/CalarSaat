

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Tue Dec 05 07:06:39 2023

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	16F628A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	intentry,global,class=CODE,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12     0000                     
    13                           ; Generated 17/08/2023 GMT
    14                           ; 
    15                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    16                           ; All rights reserved.
    17                           ; 
    18                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    19                           ; 
    20                           ; Redistribution and use in source and binary forms, with or without modification, are
    21                           ; permitted provided that the following conditions are met:
    22                           ; 
    23                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    24                           ;        conditions and the following disclaimer.
    25                           ; 
    26                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    27                           ;        of conditions and the following disclaimer in the documentation and/or other
    28                           ;        materials provided with the distribution. Publication is not required when
    29                           ;        this file is used in an embedded application.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F628A Definitions
    45                           ; 
    46                           ; SFR Addresses
    47     0000                     	;# 
    48     0001                     	;# 
    49     0002                     	;# 
    50     0003                     	;# 
    51     0004                     	;# 
    52     0005                     	;# 
    53     0006                     	;# 
    54     000A                     	;# 
    55     000B                     	;# 
    56     000C                     	;# 
    57     000E                     	;# 
    58     000E                     	;# 
    59     000F                     	;# 
    60     0010                     	;# 
    61     0011                     	;# 
    62     0012                     	;# 
    63     0015                     	;# 
    64     0015                     	;# 
    65     0016                     	;# 
    66     0017                     	;# 
    67     0018                     	;# 
    68     0019                     	;# 
    69     001A                     	;# 
    70     001F                     	;# 
    71     0081                     	;# 
    72     0085                     	;# 
    73     0086                     	;# 
    74     008C                     	;# 
    75     008E                     	;# 
    76     0092                     	;# 
    77     0098                     	;# 
    78     0099                     	;# 
    79     009A                     	;# 
    80     009B                     	;# 
    81     009C                     	;# 
    82     009D                     	;# 
    83     009F                     	;# 
    84     0000                     	;# 
    85     0001                     	;# 
    86     0002                     	;# 
    87     0003                     	;# 
    88     0004                     	;# 
    89     0005                     	;# 
    90     0006                     	;# 
    91     000A                     	;# 
    92     000B                     	;# 
    93     000C                     	;# 
    94     000E                     	;# 
    95     000E                     	;# 
    96     000F                     	;# 
    97     0010                     	;# 
    98     0011                     	;# 
    99     0012                     	;# 
   100     0015                     	;# 
   101     0015                     	;# 
   102     0016                     	;# 
   103     0017                     	;# 
   104     0018                     	;# 
   105     0019                     	;# 
   106     001A                     	;# 
   107     001F                     	;# 
   108     0081                     	;# 
   109     0085                     	;# 
   110     0086                     	;# 
   111     008C                     	;# 
   112     008E                     	;# 
   113     0092                     	;# 
   114     0098                     	;# 
   115     0099                     	;# 
   116     009A                     	;# 
   117     009B                     	;# 
   118     009C                     	;# 
   119     009D                     	;# 
   120     009F                     	;# 
   121     000E                     _TMR1	set	14
   122     0010                     _T1CONbits	set	16
   123     000B                     _INTCONbits	set	11
   124     0030                     _RB0	set	48
   125     0060                     _TMR1IF	set	96
   126     008C                     _PIE1bits	set	140
   127     008E                     _PCONbits	set	142
   128     0434                     _TRISB4	set	1076
   129     0431                     _TRISB1	set	1073
   130     0430                     _TRISB0	set	1072
   131                           
   132                           	psect	cinit
   133     000B                     start_initialization:	
   134                           ; #config settings
   135                           
   136     000B                     __initialization:
   137                           
   138                           ; Clear objects allocated to COMMON
   139     000B  01F0               	clrf	__pbssCOMMON& (0+127)
   140     000C  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   141     000D                     end_of_initialization:	
   142                           ;End of C runtime variable initialization code
   143                           
   144     000D                     __end_of__initialization:
   145     000D  0183               	clrf	3
   146     000E  2839               	ljmp	_main	;jump to C main() function
   147                           
   148                           	psect	bssCOMMON
   149     0070                     __pbssCOMMON:
   150     0070                     _sayac:
   151     0070                     	ds	2
   152                           
   153                           	psect	cstackCOMMON
   154     0072                     __pcstackCOMMON:
   155     0072                     ?_timer1:
   156     0072                     ??_timer1:	
   157                           ; 1 bytes @ 0x0
   158                           
   159     0072                     ?_main:	
   160                           ; 1 bytes @ 0x0
   161                           
   162                           
   163                           ; 2 bytes @ 0x0
   164     0072                     	ds	2
   165     0074                     ??_main:
   166                           
   167                           	psect	maintext
   168     0039                     __pmaintext:	
   169                           ; 1 bytes @ 0x2
   170 ;;
   171 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   172 ;;
   173 ;; *************** function _main *****************
   174 ;; Defined at:
   175 ;;		line 33 in file "CALAR_SAAT.c"
   176 ;; Parameters:    Size  Location     Type
   177 ;;		None
   178 ;; Auto vars:     Size  Location     Type
   179 ;;		None
   180 ;; Return value:  Size  Location     Type
   181 ;;                  2   34[None  ] int 
   182 ;; Registers used:
   183 ;;		None
   184 ;; Tracked objects:
   185 ;;		On entry : B00/0
   186 ;;		On exit  : 0/0
   187 ;;		Unchanged: 0/0
   188 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   189 ;;      Params:         0       0       0       0
   190 ;;      Locals:         0       0       0       0
   191 ;;      Temps:          0       0       0       0
   192 ;;      Totals:         0       0       0       0
   193 ;;Total ram usage:        0 bytes
   194 ;; Hardware stack levels required when called: 1
   195 ;; This function calls:
   196 ;;		Nothing
   197 ;; This function is called by:
   198 ;;		Startup code after reset
   199 ;; This function uses a non-reentrant model
   200 ;;
   201                           
   202     0039                     _main:	
   203                           ;psect for function _main
   204                           
   205     0039                     l598:	
   206                           ;incstack = 0
   207                           ; Regs used in _main: []
   208                           
   209                           
   210                           ;CALAR_SAAT.c: 34:     PCONbits.OSCF=1;
   211     0039  1683               	bsf	3,5	;RP0=1, select bank1
   212     003A  1303               	bcf	3,6	;RP1=0, select bank1
   213     003B  158E               	bsf	14,3	;volatile
   214                           
   215                           ;CALAR_SAAT.c: 36:     INTCONbits.GIE=1;
   216     003C  178B               	bsf	11,7	;volatile
   217                           
   218                           ;CALAR_SAAT.c: 37:     INTCONbits.PEIE=1;
   219     003D  170B               	bsf	11,6	;volatile
   220                           
   221                           ;CALAR_SAAT.c: 38:     PIE1bits.TMR1IE=1;
   222     003E  140C               	bsf	12,0	;volatile
   223                           
   224                           ;CALAR_SAAT.c: 40:     T1CONbits.T1CKPS0=0;
   225     003F  1283               	bcf	3,5	;RP0=0, select bank0
   226     0040  1303               	bcf	3,6	;RP1=0, select bank0
   227     0041  1210               	bcf	16,4	;volatile
   228                           
   229                           ;CALAR_SAAT.c: 41:     T1CONbits.T1CKPS1=0;
   230     0042  1290               	bcf	16,5	;volatile
   231                           
   232                           ;CALAR_SAAT.c: 42:     T1CONbits.TMR1CS=0;
   233     0043  1090               	bcf	16,1	;volatile
   234                           
   235                           ;CALAR_SAAT.c: 43:     T1CONbits.TMR1ON=1;
   236     0044  1410               	bsf	16,0	;volatile
   237                           
   238                           ;CALAR_SAAT.c: 45:     TRISB0=0;
   239     0045  1683               	bsf	3,5	;RP0=1, select bank1
   240     0046  1303               	bcf	3,6	;RP1=0, select bank1
   241     0047  1006               	bcf	6,0	;volatile
   242                           
   243                           ;CALAR_SAAT.c: 46:     TRISB1=0;
   244     0048  1086               	bcf	6,1	;volatile
   245                           
   246                           ;CALAR_SAAT.c: 47:     TRISB4=1;
   247     0049  1606               	bsf	6,4	;volatile
   248     004A                     l35:	
   249                           ;CALAR_SAAT.c: 49:     while(1){
   250                           
   251     004A                     l36:	
   252                           ;CALAR_SAAT.c: 51:     }
   253                           
   254     004A  284A               	goto	l35
   255     004B  280A               	ljmp	start
   256     004C                     __end_of_main:
   257                           
   258                           	psect	text1
   259     000F                     __ptext1:	
   260 ;; *************** function _timer1 *****************
   261 ;; Defined at:
   262 ;;		line 18 in file "CALAR_SAAT.c"
   263 ;; Parameters:    Size  Location     Type
   264 ;;		None
   265 ;; Auto vars:     Size  Location     Type
   266 ;;		None
   267 ;; Return value:  Size  Location     Type
   268 ;;                  1    wreg      void 
   269 ;; Registers used:
   270 ;;		wreg, status,2, status,0
   271 ;; Tracked objects:
   272 ;;		On entry : 0/0
   273 ;;		On exit  : 0/0
   274 ;;		Unchanged: 0/0
   275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
   276 ;;      Params:         0       0       0       0
   277 ;;      Locals:         0       0       0       0
   278 ;;      Temps:          2       0       0       0
   279 ;;      Totals:         2       0       0       0
   280 ;;Total ram usage:        2 bytes
   281 ;; Hardware stack levels used: 1
   282 ;; This function calls:
   283 ;;		Nothing
   284 ;; This function is called by:
   285 ;;		Interrupt level 1
   286 ;; This function uses a non-reentrant model
   287 ;;
   288                           
   289     000F                     _timer1:	
   290                           ;psect for function _timer1
   291                           
   292     000F                     i1l582:
   293                           
   294                           ;CALAR_SAAT.c: 19:     if(TMR1IF){
   295     000F  1283               	bcf	3,5	;RP0=0, select bank0
   296     0010  1303               	bcf	3,6	;RP1=0, select bank0
   297     0011  1C0C               	btfss	12,0	;volatile
   298     0012  2814               	goto	u1_21
   299     0013  2815               	goto	u1_20
   300     0014                     u1_21:
   301     0014  2832               	goto	i1l30
   302     0015                     u1_20:
   303     0015                     i1l584:
   304                           
   305                           ;CALAR_SAAT.c: 20:         TMR1=15536;
   306     0015  303C               	movlw	60
   307     0016  008F               	movwf	15	;volatile
   308     0017  30B0               	movlw	176
   309     0018  008E               	movwf	14	;volatile
   310                           
   311                           ;CALAR_SAAT.c: 21:         TMR1IF=0;
   312     0019  100C               	bcf	12,0	;volatile
   313     001A                     i1l586:
   314                           
   315                           ;CALAR_SAAT.c: 22:         sayac++;
   316     001A  3001               	movlw	1
   317     001B  07F0               	addwf	_sayac,f
   318     001C  1803               	skipnc
   319     001D  0AF1               	incf	_sayac+1,f
   320     001E  3000               	movlw	0
   321     001F  07F1               	addwf	_sayac+1,f
   322     0020                     i1l588:
   323                           
   324                           ;CALAR_SAAT.c: 23:         if(sayac==20){
   325     0020  3014               	movlw	20
   326     0021  0670               	xorwf	_sayac,w
   327     0022  0471               	iorwf	_sayac+1,w
   328     0023  1D03               	btfss	3,2
   329     0024  2826               	goto	u2_21
   330     0025  2827               	goto	u2_20
   331     0026                     u2_21:
   332     0026  2828               	goto	i1l592
   333     0027                     u2_20:
   334     0027                     i1l590:
   335                           
   336                           ;CALAR_SAAT.c: 24:             RB0=1;
   337     0027  1406               	bsf	6,0	;volatile
   338     0028                     i1l592:
   339                           
   340                           ;CALAR_SAAT.c: 26:         if(sayac==40){
   341     0028  3028               	movlw	40
   342     0029  0670               	xorwf	_sayac,w
   343     002A  0471               	iorwf	_sayac+1,w
   344     002B  1D03               	btfss	3,2
   345     002C  282E               	goto	u3_21
   346     002D  282F               	goto	u3_20
   347     002E                     u3_21:
   348     002E  2832               	goto	i1l30
   349     002F                     u3_20:
   350     002F                     i1l594:
   351                           
   352                           ;CALAR_SAAT.c: 27:             sayac=0;
   353     002F  01F0               	clrf	_sayac
   354     0030  01F1               	clrf	_sayac+1
   355     0031                     i1l596:
   356                           
   357                           ;CALAR_SAAT.c: 28:             RB0=0;
   358     0031  1006               	bcf	6,0	;volatile
   359     0032                     i1l30:
   360     0032  0873               	movf	??_timer1+1,w
   361     0033  008A               	movwf	10
   362     0034  0E72               	swapf	??_timer1,w
   363     0035  0083               	movwf	3
   364     0036  0EFE               	swapf	btemp,f
   365     0037  0E7E               	swapf	btemp,w
   366     0038  0009               	retfie
   367     0039                     __end_of_timer1:
   368     007E                     btemp	set	126	;btemp
   369     007E                     wtemp0	set	126
   370                           
   371                           	psect	intentry
   372     0004                     __pintentry:	
   373                           ;incstack = 0
   374                           ; Regs used in _timer1: [wreg+status,2+status,0]
   375                           
   376     0004                     interrupt_function:
   377     007E                     saved_w	set	btemp
   378     0004  00FE               	movwf	btemp
   379     0005  0E03               	swapf	3,w
   380     0006  00F2               	movwf	??_timer1
   381     0007  080A               	movf	10,w
   382     0008  00F3               	movwf	??_timer1+1
   383     0009  280F               	ljmp	_timer1
   384                           
   385                           	psect	config
   386                           
   387                           ;Config register CONFIG @ 0x2007
   388                           ;	Oscillator Selection bits
   389                           ;	FOSC = INTOSCIO, INTOSC oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O function 
      +                          on RA7/OSC1/CLKIN
   390                           ;	Watchdog Timer Enable bit
   391                           ;	WDTE = OFF, WDT disabled
   392                           ;	Power-up Timer Enable bit
   393                           ;	PWRTE = OFF, PWRT disabled
   394                           ;	RA5/MCLR/VPP Pin Function Select bit
   395                           ;	MCLRE = ON, RA5/MCLR/VPP pin function is MCLR
   396                           ;	Brown-out Detect Enable bit
   397                           ;	BOREN = OFF, BOD disabled
   398                           ;	Low-Voltage Programming Enable bit
   399                           ;	LVP = OFF, RB4/PGM pin has digital I/O function, HV on MCLR must be used for programmi
      +                          ng
   400                           ;	Data EE Memory Code Protection bit
   401                           ;	CPD = OFF, Data memory code protection off
   402                           ;	Flash Program Memory Code Protection bit
   403                           ;	CP = OFF, Code protection off
   404     2007                     	org	8199
   405     2007  3F38               	dw	16184

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK2            48      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _timer1 in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _timer1 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer1 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer1 in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _timer1                                               2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _timer1 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              80      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      2       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
BANK0               50      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0       4       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK2            30      0       0       8        0.0%
BANK2               30      0       0       9        0.0%
DATA                 0      0       4      10        0.0%


Microchip Technology PIC Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Tue Dec 05 07:06:39 2023

                     l35 004A                       l36 004A                      l598 0039  
                    _RB0 0030                     i1l30 0032                     _TMR1 000E  
                   u1_20 0015                     u1_21 0014                     u2_20 0027  
                   u2_21 0026                     u3_20 002F                     u3_21 002E  
                   _main 0039                     btemp 007E                     start 000A  
                  ?_main 0072                    i1l590 0027                    i1l582 000F  
                  i1l592 0028                    i1l584 0015                    i1l594 002F  
                  i1l586 001A                    i1l596 0031                    i1l588 0020  
                  _sayac 0070                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 000B             __end_of_main 004C  
                 ??_main 0074                   _TMR1IF 0060                   _TRISB0 0430  
                 _TRISB1 0431                   _TRISB4 0434                   _timer1 000F  
                 saved_w 007E  __end_of__initialization 000D           __pcstackCOMMON 0072  
             __pmaintext 0039               __pintentry 0004                  ?_timer1 0072  
                __ptext1 000F                _T1CONbits 0010     end_of_initialization 000D  
         __end_of_timer1 0039      start_initialization 000B                 ??_timer1 0072  
            __pbssCOMMON 0070                ___latbits 0000        interrupt_function 0004  
               _PIE1bits 008C                 _PCONbits 008E               _INTCONbits 000B  
               intlevel1 0000  
